<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.cli">Command-line tool</Crumb::Item>
	<Crumb::Item @link="docs.cli.sql">SQL command</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
	<h2>SQL command</h2>
	<p>The SQL command starts a REPL for running or piping SurrealQL queries to a local or remote SurrealDB database server.</p>
	<blockquote yellow text="Before you start">Make sure you’ve <Link @link="docs.installation">installed SurrealDB</Link> — it should only take a second!</blockquote>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Command options</h3>
	<Layout::Table filled>
		<table>
			<thead>
				<tr>
					<th w-40>Argument</th>
					<th w-60>Description</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>
						<code>-e</code> <span fg-faint>/</span> <code>--endpoint</code>
						<l faint r>Optional</l>
					</td>
					<td>
						Sets the url of the database server to connect to
						<br>
						<p small>Default is <code>ws://localhost:8000</code></p>
					</td>
				</tr>
				<tr>
					<td>
						<code>-u</code> <span fg-faint>/</span> <code>--username</code>
						<l yellow r>Required</l>
					</td>
					<td>Sets the root, namespace, or database user</td>
				</tr>
				<tr>
					<td>
						<code>-p</code> <span fg-faint>/</span> <code>--password</code>
						<l yellow r>Required</l>
					</td>
					<td>Sets the password for the specified user</td>
				</tr>
				<tr>
					<td>
						<code>--namespace</code>
						<l faint r>Optional</l>
					</td>
					<td>Sets the desired namespace into which to import data</td>
				</tr>
				<tr>
					<td>
						<code>--database</code>
						<l faint r>Optional</l>
					</td>
					<td>Sets the desired database into which to import data</td>
				</tr>
				<tr>
					<td>
						<code>--pretty</code>
						<l faint r>Optional</l>
					</td>
					<td>Sets whether database responses should be pretty printed</td>
				</tr>
				<tr>
					<td>
						<code>--json</code>
						<l faint r>Optional</l>
					</td>
					<td>Sets whether to emit results in JSON</td>
				</tr>
				<tr>
					<td>
						<code>--multi</code>
						<l faint r>Optional</l>
					</td>
					<td>Sets whether omitting semicolon causes a newline</td>
				</tr>
				<tr>
					<td>
						<code>-h</code> <span fg-faint>/</span> <code>--help</code>
						<l faint r>Optional</l>
					</td>
					<td>Prints help</td>
				</tr>
			</tbody>
		</table>
	</Layout::Table>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Example usage</h3>
	<p>To start a terminal-based REPL and run or pipe queries to a local or remote SurrealDB database, in a terminal run the <Ascua::Prism::Inline @language="shell" @code="surreal sql" /> command with the required arguments.</p>
	<p>Once you see the <code>&gt;</code> character you can type your SurrealQL query, followed by the <code>enter</code> key. The command has support for <code>&uarr;</code> and <code>&darr;</code> arrows for selecting previous SQL statements, and stores the statement history in a <code>history.txt</code> file. To exit the REPL use the <code>ctrl + c</code> or <code>ctrl + d</code> key combinations.</p>
	<codes vertical>
		<Code @name="docs-cli-SQL-main.shell" text="Command line">
			user@localhost % surreal sql --endpoint http://localhost:8000 --username root --password root --namespace test --database test
		</Code>
		<Code @name="docs/cli/sql/main.txt" />
	</codes>
	<p>It is also possible to pipe a set of statements to a remote database. This functionality is only designed for submitting a small number of queries to the database server. For a large number of queries, use the <Link @link="docs.cli.import">import command</Link>.</p>
	<codes vertical>
		<Code @name="docs-cli-sql-pipe.shell" text="Command line">
			user@localhost % cat myfile.surql | surreal sql --endpoint http://localhost:8000 --username root --password root --namespace test --database test
		</Code>
	</codes>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>
	<h3>Command help</h3>
	<p>To see the help information and usage instructions, in a terminal run the <Ascua::Prism::Inline @language="shell" @code="surreal sql --help" /> command without any further arguments. This command gives general information on the arguments, inputs, and additional options for the <code>sql</code> command.</p>
	<codes vertical>
		<Code @name="docs-cli-help-sql.shell" text="Command line">
			user@localhost % surreal sql --help
		</Code>
		<Code @name="docs/cli/help/sql.txt" />
	</codes>
</Layout::Text>

<Layout::Gap large />