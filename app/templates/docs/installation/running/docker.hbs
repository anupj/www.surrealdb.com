<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.installation">Installation</Crumb::Item>
	<Crumb::Item @link="docs.installation.running.docker">Run with Docker</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
	<h2><Devicon @size="50" @type="docker" /> Run with Docker</h2>
	<p>Use this tutorial to run SurrealDB from within Docker.</p>
</Layout::Text>

<Layout::Gap mini />

<Layout::Text text-l text-f>

	<h3>Running the SurrealDB server using Docker</h3>

	<p>To get started using Docker, you can use the <code>latest</code> tag. To start a server use the <Link @link="docs.cli.start"><Ascua::Prism::Inline @language="bash" @code="start" /></Link> command. By default SurrealDB runs on port <code>8000</code>. To view all the available versions and tags, or to use a specific tag visit the <Link @link={{url "docker"}}>Docker Hub</Link> page.</p>

	<Code @name="docs-installation-running-docker-1.shell">
		user@localhost % docker run --rm --pull always -p 8000:8000 surrealdb/surrealdb:latest start
	</Code>

	<p>In order to persist data when the Docker instance is restarted or shutdown, specify a Docker folder using the Docker <Ascua::Prism::Inline @language="bash" @code="-v" /> command line argument, and use the on-disk storage engine in SurrealDB using the path prefix chosen as a Docker folder.</p>

	<Code @name="docs-installation-running-docker-2.shell">
		user@localhost % docker run --rm --pull always -p 8000:8000 -v /mydata:/mydata surrealdb/surrealdb:latest start file:/mydata/mydatabase.db
	</Code>

	<p>The default logging level for the database server is <code>info</code>, resulting in any informational logs to be output to the standard output. To control the logging verbosity, specify the <Ascua::Prism::Inline @language="bash" @code="--log" /> argument. The following command starts the database with <code>trace</code> level logging, resulting in most logs being output to the terminal.</p>

	<Code @name="docs-installation-running-docker-3.shell">
		user@localhost % docker run --rm --pull always -p 8000:8000 -v /mydata:/mydata surrealdb/surrealdb:latest start --log trace file:/mydata/mydatabase.db
	</Code>

	<p>In order to keep SurrealDB secure, configure your initial root-level user by setting the <Ascua::Prism::Inline @language="bash" @code="--user" /> and <Ascua::Prism::Inline @language="bash" @code="--pass" /> command-line arguments. The following command starts the database with a top-level user named <code>root</code> with a password also set to <code>root</code>. The root user will be persisted in storage, which means you don't have to include the command line arguments next time you start SurrealDB.</p>

	<Code @name="docs-installation-running-docker-4.shell">
		user@localhost % docker run --rm --pull always -p 80:8000 -v /mydata:/mydata surrealdb/surrealdb:latest start --log trace --auth --user root --pass root file:mydatabase.db
	</Code>

	<p>In order to change the default port that SurrealDB uses for web connections and from database clients you can use the Docker <Ascua::Prism::Inline @language="bash" @code="-p" /> command line argument to tunnel the port to the internal SurrealDB port which SurrealDB is served on. The following command starts the database on port <code>80</code>.</p>

	<Code @name="docs-installation-running-docker-5.shell">
		user@localhost % docker run --rm --pull always -p 80:8000 -v /mydata:/mydata surrealdb/surrealdb:latest start --log trace --user root --pass root file:/mydata/mydatabase.db
	</Code>

	<p>After running the above command, you should see the SurrealDB server startup successfully.</p>

	<Code @name="docs-installation-running-docker-6.shell">
		user@localhost % docker run --rm --pull always -p 80:8000 -v /local-dir:/container-dir surrealdb/surrealdb:latest start --auth --user root --pass root file:/container-dir/mydatabase.db
		2023-08-30T15:06:34.788739Z  INFO surreal::dbs: âœ…ðŸ”’ Authentication is enabled ðŸ”’âœ…
		2023-08-30T15:06:34.788821Z  INFO surrealdb::kvs::ds: Starting kvs store in file:/container-dir/mydatabase.db
		2023-08-30T15:06:34.788859Z  INFO surrealdb::kvs::ds: Started kvs store in file:/container-dir/mydatabase.db
		2023-08-30T15:06:34.789222Z  INFO surrealdb::kvs::ds: Initial credentials were provided and no existing root-level users were found: create the initial user 'root'.
		2023-08-30T15:06:35.205123Z  INFO surrealdb::node: Started node agent
		2023-08-30T15:06:35.205827Z  INFO surrealdb::net: Started web server on 0.0.0.0:8080
	</Code>

	<p>For details on the <Link @link="docs.cli.start"><Ascua::Prism::Inline @language="bash" @code="start" /></Link> command, and all of the available configuration options and arguments, view the <Link @link="docs.cli.start">start command documentation</Link>.</p>

</Layout::Text>

<Layout::Line />

<Layout::Text text-l text-f>

	<h3>Using the command-line tools within Docker</h3>

	<p>The Docker container contains both the server, and the command line tools for importing, exporting, and querying a remote SurrealDB server.</p>

	<Code @name="docs-installation-running-docker-7.shell">
		user@localhost % docker run --rm --pull always surrealdb/surrealdb:latest help
	</Code>

	<p>The result should look similar to the output below, confirming that the SurrealDB command-line tool was installed successfully.</p>

	<Code @name="docs/cli/help/main.txt" />

	<p>For details on the different commands available, visit the <Link @link="docs.cli">CLI tool documentation</Link>.</p>

</Layout::Text>

<Layout::Gap large />
